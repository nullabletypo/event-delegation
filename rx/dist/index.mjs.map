{"version":3,"file":"index.mjs","sources":["../src/index.ts"],"sourcesContent":["import { fromEventPattern, Observable, queueScheduler } from 'rxjs'\nimport { share, observeOn } from 'rxjs/operators'\nimport { delegate as _delegate, EventDelegatorOptions as Opts, EventHandler } from 'event-delegation'\n\ntype Type = keyof HTMLElementEventMap\n\nexport function delegate(target: EventTarget, options?: Opts) {\n  const del = _delegate(target, options)\n  return on\n\n  function on<T extends Event>(type: Type, opts?: Opts): Observable<T>\n  function on<T extends Event>(type: string, opts?: Opts): Observable<T>\n  function on<T extends Event>(type: Type, sel: string, opts?: Opts): Observable<T>\n  function on<T extends Event>(type: string, sel: string, opts?: Opts): Observable<T>\n  function on<T extends Event>(type: string, a: any, b?: any) {\n    const [sel, opts] = typeof a === 'string' ? [a, b] : [undefined, b]\n    const add = (next: EventHandler) => del.on(type, sel, next, opts)\n    const remove = (next: EventHandler) => del.off(type, next, opts)\n    return fromEventPattern<T>(add, remove).pipe(\n      observeOn(queueScheduler),\n      share(),\n    )\n  }\n}\n"],"names":["delegate","target","options","del","_delegate","on","type","a","b","undefined","sel","opts","add","next","remove","off","fromEventPattern","pipe","observeOn","queueScheduler","share"],"mappings":";;;;SAMgBA,WAASC,QAAqBC;MACtCC,GAAG,GAAGC,QAAS,CAACH,MAAD,EAASC,OAAT,CAArB;;SACOG,EAAP;;WAMSA,EAAT,CAA6BC,IAA7B,EAA2CC,CAA3C,EAAmDC,CAAnD;cACsB,OAAOD,CAAP,KAAa,QAAb,GAAwB,CAACA,CAAD,EAAIC,CAAJ,CAAxB,GAAiC,CAACC,SAAD,EAAYD,CAAZ;IAA9CE;IAAKC;;QACNC,GAAG,aAAIC,eAAuBV,GAAG,CAACE,EAAJ,CAAOC,IAAP,EAAaI,GAAb,EAAkBG,IAAlB,EAAwBF,IAAxB,IAApC;;QACMG,MAAM,aAAID,eAAuBV,GAAG,CAACY,GAAJ,CAAQT,IAAR,EAAcO,IAAd,EAAoBF,IAApB,IAAvC;;WACOK,gBAAgB,CAAIJ,GAAJ,EAASE,MAAT,CAAhB,CAAiCG,IAAjC,CACLC,SAAS,CAACC,cAAD,CADJ,EAELC,KAAK,EAFA,CAAP;;;;;;"}